class Solution {
    public int maxProfit(int[] prices) {
        if (prices==null || prices.length==0) return 0;
        /*
        // Method 1: Brute Force
        // O(n^2) O(1)
        int maxPro=0;
        for (int i=0; i<prices.length-1; i++) {
            for (int j=i+1; j<prices.length; j++) {
                maxPro=Math.max(maxPro, prices[j]=prices[i]);
            }
        }
        return maxPro; */
        
        // Method 2: One Pass
        // O(n) O(1)
        int minPrice=prices[0];
        int maxProfit=0;
        for (int i=1; i<prices.length; i++) {
            minPrice=Math.min(minPrice, prices[i]);
            maxProfit=Math.max(maxProfit, prices[i]-minPrice);
        }
        return maxProfit;
        
    }
}
