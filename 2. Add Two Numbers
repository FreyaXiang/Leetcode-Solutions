/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode head = new ListNode(0);
        int carry = 0, sum = 0;
        ListNode current = head;
        while(l1 != null || l2 != null){    //check if either is non null
            int v1 = l1!=null ? l1.val : 0;
            int v2 = l2!=null ? l2.val : 0;
            
            sum = v1 + v2 + carry;
            carry = sum/10;
            current.next = new ListNode(sum%10);
            
            if(l1!=null) l1 = l1.next;
            if(l2!=null) l2 = l2.next;
            current = current.next;
        }
        if (carry>0){   //for cases like 9+9 or 99+99
            current.next = new ListNode(carry);
        }
        return head.next;   //since we had a dummy node (with value 0) at the start
    }
}
