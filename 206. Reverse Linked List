/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

// recursively 
class Solution {
    public ListNode reverseList(ListNode head) {
        // Method 2: recursively
        if (head==null || head.next==null) return head;
        ListNode p=reverseList(head.next);
        head.next.next=head;
        head.next=null;
        return p;
        
        /* Method 1: iteratively
        ListNode previous=null;
        ListNode current=head;
        while (current!=null) {
            ListNode temp=current.next;
            current.next=previous;
            previous=current;
            current=temp;
        }
        return previous; */
       
        
        
    }
}

