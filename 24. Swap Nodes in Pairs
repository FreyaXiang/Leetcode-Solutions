/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        // Method 2: recursive O(n) O(n)
        if (head==null || head.next==null) return head;
        
        ListNode first=head;
        ListNode second=head.next;
        ListNode newHead=second;
        ListNode temp=second.next;
        second.next=first;
        first.next=swapPairs(temp);
        return newHead;
        
        /*
        // Method 1: iterative O(n) O(1)
        if (head==null || head.next==null) return head;
        ListNode first=head;
        ListNode second=head.next;
        ListNode newHead=second;
        while (true) {
            ListNode temp=second.next;
            second.next=first;
            if (temp==null || temp.next==null) {
                first.next=temp;
                break;
            } 
            first.next=temp.next;
            // redefine
            first=temp;
            second=temp.next; 
        }
        return newHead;  
        */
    } 
}
