import java.util.*;
class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> solution=new ArrayList<>();
        Arrays.sort(nums);
        backtrack(solution, new ArrayList<>(), nums, 0);
        return solution;    
    }
    
    public static void backtrack(List<List<Integer>> solution, List<Integer> tempList, int[] nums, int start) {
        solution.add(new ArrayList<>(tempList));
        for (int i=start; i<nums.length; i++) {
            if (i>start && nums[i]==nums[i-1]) continue;
            tempList.add(nums[i]);
            backtrack(solution, tempList, nums, i+1);
            tempList.remove(tempList.size()-1);
        }
    }
}
